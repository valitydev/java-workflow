name: Deploy Artifact

on:
  workflow_call:
    inputs:
      node-version:
        description: Node version
        required: false
        default: "16"
        type: string
      dist-directory:
        description: Directory where bundled artifacts are built
        required: false
        default: "dist"
        type: string
      java-version:
        description: 'Java version'
        required: false
        default: "21"
        type: string
      java-distribution:
        description: 'Java distribution'
        required: false
        default: "temurin"
        type: string
    secrets:
      server-username:
        required: true
      server-password:
        required: true
      deploy-secret-key:
        required: true
      deploy-secret-key-password:
        required: true
      github-token:
        required: true
      mm-webhook-url:
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Bundle specification
        run: npm run build

      - name: Validate specification
        run: npm run validate

      - name: Upload specification bundle
        uses: actions/upload-artifact@v4
        with:
          name: spec-bundle
          path: ${{ inputs.dist-directory }}
          if-no-files-found: error
          retention-days: 7

  deploy-server:
    runs-on: ubuntu-22.04
    needs: [build]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download specification bundle
        uses: actions/download-artifact@v4
        with:
          name: spec-bundle
          path: ${{ inputs.dist-directory }}

      - name: Retrieve commit info
        id: commit_info
        uses: valitydev/java-workflow/.github/actions/commit-info@v3

      - name: Deploy package
        uses: valitydev/action-deploy-jdk-package@v1.0.20
        with:
          jdk-version: ${{ inputs.java-version }}
          jdk-distribution: ${{ inputs.java-distribution }}
          server-username: ${{ secrets.server-username }}
          server-password: ${{ secrets.server-password }}
          deploy-secret-key: ${{ secrets.deploy-secret-key }}
          deploy-secret-key-password: ${{ secrets.deploy-secret-key-password }}
          maven-args: '-Dcommit.number=${{ env.COMMIT_NUMBER }} -Drevision="${{ env.REVISION }}-server" -P="server"'

  deploy-client:
    runs-on: ubuntu-22.04
    needs: [build]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download specification bundle
        uses: actions/download-artifact@v4
        with:
          name: spec-bundle
          path: ${{ inputs.dist-directory }}

      - name: Retrieve commit info
        id: commit_info
        uses: valitydev/java-workflow/.github/actions/commit-info@v3

      - name: Deploy package
        uses: valitydev/action-deploy-jdk-package@v1.0.20
        with:
          jdk-version: ${{ inputs.java-version }}
          jdk-distribution: ${{ inputs.java-distribution }}
          server-username: ${{ secrets.server-username }}
          server-password: ${{ secrets.server-password }}
          deploy-secret-key: ${{ secrets.deploy-secret-key }}
          deploy-secret-key-password: ${{ secrets.deploy-secret-key-password }}
          maven-args: '-Dcommit.number=${{ env.COMMIT_NUMBER }} -Drevision="${{ env.REVISION }}-client" -P="client"'

  success-notify:
    runs-on: ubuntu-22.04
    needs: [deploy-server, deploy-client]
    if: success()
    steps:
      - name: Mattermost Notification
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_USERNAME: ${{ github.event.repository.name }}
          SLACK_WEBHOOK: ${{ secrets.mm-webhook-url }}
          SLACK_COLOR: "#00c100"
          SLACK_LINK_NAMES: true
          SLACK_FOOTER: ""

  fail-notify:
    runs-on: ubuntu-22.04
    needs: [deploy-server, deploy-client]
    if: failure()
    steps:
      - name: Mattermost Notification
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_USERNAME: ${{ github.event.repository.name }}
          SLACK_WEBHOOK: ${{ secrets.mm-webhook-url }}
          SLACK_COLOR: "#e40303"
          SLACK_LINK_NAMES: true
          SLACK_FOOTER: ""
